# This workflow runs anytime new commits are added to master branch.
# It simply runs all of ObsPy's default tests on all supported OS/python versions
# and network tests for some supported OS/python versions
name: master
on:
  push:
    branches:
      - master

jobs:
  default_tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10']
        allflag: [""]
        include:
          - os: ubuntu-latest
            python-version: '3.10'
            allflag: _all
            prefix: /usr/share/miniconda3/envs/test
          - os: macos-latest
            python-version: '3.10'
            allflag: _all
            prefix: /Users/runner/miniconda3/envs/test
          - os: windows-latest
            python-version: '3.10'
            allflag: _all
            prefix: C:\Miniconda3\envs\test

          - os: ubuntu-latest
            prefix: /usr/share/miniconda3/envs/test
          - os: macos-latest
            prefix: /Users/runner/miniconda3/envs/test
          - os: windows-latest
            prefix: C:\Miniconda3\envs\test

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - uses: conda-incubator/setup-miniconda@v2.1.1
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          activate-environment: test
          use-mamba: true
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v2
        with:
          path: ${{ matrix.prefix }}
          key: ${{ matrix.os }}-py${{ matrix.python-version }}-hash${{ hashFiles('.github/test${{ matrix.allflag }}_conda_env.yml') }}-${{ steps.date.outputs.date }}-${{ env.CACHE_NUMBER }}
        env:
          # Increase this value to reset cache if etc/example-environment.yml has not changed
          CACHE_NUMBER: 0
        id: cache

      - name: Update environment
        run: mamba env update -n test -f .github/test${{ matrix.allflag }}_conda_env.yml
        if: steps.cache.outputs.cache-hit != 'true'

      - name: print package info
        shell: bash -l {0}
        run: |
          conda info -a
          conda list

      - name: install obspy
        shell: bash -l {0}
        run: |
          python -m pip install -e .[tests]

      - name: run test suite
        id: tests
        shell: bash -l {0}
        run: |
          obspy-runtests --cov obspy --cov-report='xml' --cov-append --report

      - name: upload coverage
        if: always() && (steps.tests.outcome == 'success' || steps.tests.outcome == 'failure')
        uses: codecov/codecov-action@v2.1.0
        with:
          flags: unittests
          token: ${{ secrets.CODECOV_TOKEN }}
          name: codecov-umbrella
          fail_ci_if_error: false
          file: obspy/coverage.xml

  network_tests:
    continue-on-error: true
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.7']
        include:
          - os: ubuntu-latest
            python-version: '3.10'
            prefix: /usr/share/miniconda3/envs/test

          - os: ubuntu-latest
            prefix: /usr/share/miniconda3/envs/test

          - os: macos-latest
            prefix: /Users/runner/miniconda3/envs/test

          - os: windows-latest
            prefix: C:\Miniconda3\envs\test

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - uses: conda-incubator/setup-miniconda@v2.1.1
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          activate-environment: test
          use-mamba: true
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v2
        with:
          path: ${{ matrix.prefix }}
          key: ${{ matrix.os }}-py${{ matrix.python-version }}-hash${{ hashFiles('.github/test_conda_env.yml') }}-${{ steps.date.outputs.date }}-${{ env.CACHE_NUMBER }}
        env:
          # Increase this value to reset cache if etc/example-environment.yml has not changed
          CACHE_NUMBER: 0
        id: cache

      - name: Update environment
        run: mamba env update -n test -f .github/test_conda_env.yml
        if: steps.cache.outputs.cache-hit != 'true'

      - name: print package info
        shell: bash -l {0}
        run: |
          conda info -a
          conda list
      - name: install obspy
        shell: bash -l {0}
        run: |
          python -m pip install -e .[tests]
      - name: run test suite
        id: tests
        shell: bash -l {0}
        run: |
          obspy-runtests --cov obspy --cov-report='xml' --cov-append --report --network
      - name: upload coverage
        if: always() && (steps.tests.outcome == 'success' || steps.tests.outcome == 'failure')
        uses: codecov/codecov-action@v2.1.0
        with:
          flags: unittests
          token: ${{ secrets.CODECOV_TOKEN }}
          name: codecov-umbrella
          fail_ci_if_error: false
          file: obspy/coverage.xml
